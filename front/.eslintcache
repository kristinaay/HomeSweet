[{"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js":"1","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js":"2","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js":"3","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js":"4","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js":"5","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js":"6","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js":"7","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js":"8","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js":"9","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js":"10","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js":"11"},{"size":362,"mtime":1606939464318,"results":"12","hashOfConfig":"13"},{"size":946,"mtime":1607814934059,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1606939464318,"results":"15","hashOfConfig":"13"},{"size":1534,"mtime":1607823453730,"results":"16","hashOfConfig":"13"},{"size":3038,"mtime":1607745356165,"results":"17","hashOfConfig":"13"},{"size":2625,"mtime":1607745515523,"results":"18","hashOfConfig":"13"},{"size":8562,"mtime":1607835248104,"results":"19","hashOfConfig":"13"},{"size":18172,"mtime":1607838264503,"results":"20","hashOfConfig":"13"},{"size":4493,"mtime":1607741936720,"results":"21","hashOfConfig":"13"},{"size":3921,"mtime":1607814384791,"results":"22","hashOfConfig":"13"},{"size":11842,"mtime":1607836712776,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"h2owr1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js",[],["49","50"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js",["51","52"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Navigation from \"../components/navigation.js\";\r\n\r\nfunction Home() {\r\n  let textInput = React.createRef();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    const newSearch = textInput.current.value;\r\n\r\n    history.push({\r\n      pathname: \"/housing\",\r\n      state: { textInput: newSearch },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <section id=\"section1\" role=\"main\">\r\n        <h1 className=\"discover\">Rediscover Home</h1>\r\n        <div className=\"subtitle\">Find your perfect San Francisco housing.</div>\r\n        <div className=\"search-container\">\r\n          <div className=\"search\">\r\n            <input\r\n              aria-label=\"searchBox\"\r\n              type=\"text\"\r\n              className=\"searchTerm\"\r\n              ref={textInput}\r\n              placeholder=\"Search by neighborhood...\"\r\n            />\r\n\r\n            <button\r\n              aria-label=\"searchButton\"\r\n              type=\"submit\"\r\n              className=\"searchButton\"\r\n              onClick={handleClick}\r\n            >\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              <p className=\"searchForSR\">Search </p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <footer>Image by @bradencollum on Unsplash.</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js",["53"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js",["54","55"],"import React from \"react\";\r\nimport \"./saved.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navigation from \"../components/navigation.js\";\r\nimport Modal from \"react-modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nfunction Saved() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [hovered, setHovered] = useState([]);\r\n  const [indexPost, setIndex] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(12);\r\n  const [change, setChanged] = useState(false);\r\n  const getModal = () => {\r\n    return showModal;\r\n  };\r\n  const [p, setP] = useState([null, [null]]);\r\n  const indexLastPost = currentPage * postsPerPage;\r\n  const indexFirstPost = indexLastPost - postsPerPage;\r\n  const [currPosts, setCurrPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"username\");\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getHovered = () => {\r\n      try {\r\n        const arr = [];\r\n        for (let i = 0; i < 3010; i++) {\r\n          arr.push(false);\r\n        }\r\n        setHovered(arr);\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    };\r\n    getHovered();\r\n  }, []);\r\n\r\n  const changeHovered = (index, value) => {\r\n    let copyArr = [...hovered];\r\n    copyArr[index] = value;\r\n    setHovered(copyArr);\r\n  };\r\n\r\n  const getHov = (index) => {\r\n    return hovered[index];\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getSavedPosts = async () => {\r\n      setLoading(true);\r\n      const _posts = await fetch(\"/getsavedposts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: user,\r\n        }),\r\n      }).then((res) => res.json());\r\n\r\n      let p = _posts ? _posts : null;\r\n      setPosts(p);\r\n      setLoading(false);\r\n    };\r\n    getSavedPosts();\r\n  }, [user, change]);\r\n\r\n  useEffect(() => {\r\n    const getCurrPosts = async () => {\r\n      let curr = [];\r\n      if (posts !== undefined && posts != null) {\r\n        curr = posts.slice(indexFirstPost, indexLastPost);\r\n      }\r\n      setCurrPosts(curr);\r\n    };\r\n    getCurrPosts();\r\n  }, [indexFirstPost, indexLastPost, posts]);\r\n\r\n  const paginate = (pageNumber, totalPosts) => {\r\n    if (pageNumber === \"<<\") {\r\n      setCurrentPage(1);\r\n    } else if (pageNumber === \">>\") {\r\n      setCurrentPage(Math.ceil(totalPosts / 12));\r\n    } else {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const Pagination = (postsPerPage, totalPosts, paginate, currentPage) => {\r\n    const pageNumbers = [];\r\n\r\n    const pages = Math.ceil(totalPosts / 12);\r\n    if (currentPage <= 5) {\r\n      currentPage = 5;\r\n    }\r\n\r\n    if (currentPage >= pages - 5) {\r\n      currentPage = pages - 5;\r\n    }\r\n    pageNumbers.push(\"<<\");\r\n\r\n    for (\r\n      let i = Math.max(1, currentPage - 5);\r\n      i <= Math.min(currentPage + 5, totalPosts);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n    pageNumbers.push(\">>\");\r\n\r\n    return (\r\n      <nav className=\"pag\">\r\n        <ol className=\"pagination\">\r\n          {pageNumbers.map((i) => (\r\n            <li key={i} className=\"page-item\">\r\n              <Button\r\n                onClick={() => paginate(i, totalPosts)}\r\n                className=\"page-link\"\r\n              >\r\n                {i}\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const clickedInfo = (p, index) => {\r\n    setIndex(index);\r\n    console.log(index);\r\n    setP(Object.values(p));\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const renderImg = () => {\r\n    const items = [];\r\n    if (p[7] !== undefined) {\r\n      let arr = p[7].split(\",\");\r\n      for (let i = 0; i < arr.length; i++) {\r\n        items.push(\r\n          <div className=\"indiv-img col-xs-6\">\r\n            <img\r\n              src={\r\n                arr\r\n                  ? `${`${arr[i]}`.replace(\"50x50c\", \"600x450\")}`\r\n                  : \"./images/notf.png\"\r\n              }\r\n              onError={(event) =>\r\n                event.target.setAttribute(\"src\", \"./images/notf.png\")\r\n              }\r\n              alt=\"housing\"\r\n              className=\"housing-img-2\"\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"container-fluid\" id=\"cont\">\r\n            <div className=\"row\">{items}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const deletePost = async (username, title) => {\r\n    let bool = window.confirm(\r\n      \"Are you sure you want to remove this post from favorites?\"\r\n    );\r\n    if (bool) {\r\n      await fetch(\"/deletehousing\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          title: title,\r\n        }),\r\n      });\r\n      setChanged(!change);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const updatePost = async (\r\n    username,\r\n    title,\r\n    price,\r\n    housinginfo,\r\n    hood,\r\n    date,\r\n    body,\r\n    address,\r\n    images\r\n  ) => {\r\n    let notes = window.prompt(\"Add Notes to this Post: \");\r\n    await fetch(\"/updatehousing\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        title: title,\r\n        price: price,\r\n        housinginfo: housinginfo,\r\n        hood: hood,\r\n        date: date,\r\n        body: body,\r\n        address: address,\r\n        images: images,\r\n        notes: notes,\r\n      }),\r\n    });\r\n\r\n    closeModal();\r\n    await setChanged(!change);\r\n  };\r\n\r\n  const renderSavedPosts = (posts, loading) => {\r\n    if (loading) {\r\n      return <h2>Loading...</h2>;\r\n    } else if (`${posts}` === null || `${posts}` === \"\") {\r\n      return (\r\n        <h2>\r\n          No posts saved yet! Browse \"All Housing\" to find your favorites.\r\n        </h2>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Modal isOpen={showModal}>\r\n            <div className=\"modal-header\">\r\n              <div className=\"buttons-post\">\r\n                <button className=\"heart\" tab-index=\"0\">\r\n                  <img\r\n                    onClick={() => {\r\n                      updatePost(\r\n                        user,\r\n                        p[0],\r\n                        p[1],\r\n                        p[2],\r\n                        p[3],\r\n                        p[4],\r\n                        p[5],\r\n                        p[6],\r\n                        p[7]\r\n                      );\r\n                    }}\r\n                    src={\"./images/edit.png\"}\r\n                    alt=\"pen button to edit the post\"\r\n                  />\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    deletePost(user, p[0]);\r\n                  }}\r\n                  className=\"heart\"\r\n                  tab-index=\"0\"\r\n                >\r\n                  <img\r\n                    src={\"./images/delete.png\"}\r\n                    alt=\"trash button to delete the post\"\r\n                  />\r\n                </button>\r\n                <button\r\n                  onClick={closeModal}\r\n                  className=\"close-btn\"\r\n                  tab-index=\"0\"\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n              <h2 className=\"modal-header-2\">{p[0]}</h2>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <div className=\"modal-img\"></div>\r\n              <div>\r\n                <b>Your Notes: </b>\r\n                {p[8]\r\n                  ? p[8]\r\n                  : \" None yet. Click the pen icon in the top right corner to annotate this post!\"}\r\n              </div>{\" \"}\r\n              <br />\r\n              <div>\r\n                <b>Price:</b> {p[1]}\r\n              </div>\r\n              <div>\r\n                <b>Neighborhood:</b> {p[3]}\r\n              </div>\r\n              <div>\r\n                <b>Map Address:</b> {p[6]}\r\n              </div>\r\n              <div>\r\n                <b>Date Posted:</b> {p[4]}\r\n              </div>\r\n              <div>\r\n                <b>Housing Information:</b> {p[2]}\r\n              </div>\r\n              <div>\r\n                <b>About:</b>\r\n                {`${p[5]}`\r\n                  .replaceAll(\"&amp;\", \"and\")\r\n                  .replace(/<[^>]*>?/gm, \"\")\r\n                  .replace(\"QR Code Link to This Post\", \"\")}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-img\">{renderImg()}</div>\r\n          </Modal>\r\n\r\n          <Container>\r\n            <Row>\r\n              {posts.map((p, index) => (\r\n                <Col md=\"4\">\r\n                  <div className=\"container-card\">\r\n                    {\" \"}\r\n                    <b>\r\n                      <div className=\"card-header-1\">{p.title}</div>\r\n                    </b>\r\n                    {getHov(index) && (\r\n                      <div\r\n                        className=\"moreinfo\"\r\n                        onMouseLeave={() => changeHovered(index, false)}\r\n                        onMouseOver={() => changeHovered(index, true)}\r\n                        tabIndex=\"0\"\r\n                      >\r\n                        <Button\r\n                          className=\"click\"\r\n                          onClick={() => clickedInfo(p, index)}\r\n                        >\r\n                          Click for more info!{\" \"}\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                    {!getHov(index) && (\r\n                      <div className=\"whole-card\">\r\n                        <div\r\n                          className=\"card-body-1\"\r\n                          onMouseLeave={() => changeHovered(index, false)}\r\n                          onMouseOver={() => changeHovered(index, true)}\r\n                        >\r\n                          <img\r\n                            src={\r\n                              p.images.split(\",\")[0]\r\n                                ? `${p.images\r\n                                    .split(\",\")[0]\r\n                                    .replace(\"50x50c\", \"600x450\")}`\r\n                                : \"./images/notf.png\"\r\n                            }\r\n                            onError={(event) =>\r\n                              event.target.setAttribute(\r\n                                \"src\",\r\n                                \"./images/notf.png\"\r\n                              )\r\n                            }\r\n                            alt=\"housing\"\r\n                            className=\"housing-img\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n\r\n      <section className=\"house-full\" id=\"saved\" role=\"main\">\r\n        <h1 className=\"pg-heading\">Saved Posts </h1>\r\n        <div className=\"rendered\">{renderSavedPosts(currPosts, loading)} </div>\r\n\r\n        {Pagination(\r\n          postsPerPage,\r\n          posts ? posts.length : 0,\r\n          paginate,\r\n          currentPage\r\n        )}\r\n      </section>\r\n      <footer className=\"other-footer\"></footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Saved;\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":18},{"ruleId":"60","severity":1,"message":"65","line":254,"column":9,"nodeType":"62","messageId":"63","endLine":254,"endColumn":17},{"ruleId":"60","severity":1,"message":"66","line":15,"column":10,"nodeType":"62","messageId":"63","endLine":15,"endColumn":19},{"ruleId":"60","severity":1,"message":"65","line":19,"column":9,"nodeType":"62","messageId":"63","endLine":19,"endColumn":17},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'getModal' is assigned a value but never used.","'indexPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]