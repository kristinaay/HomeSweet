[{"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js":"1","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js":"2","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js":"3","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js":"4","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js":"5","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js":"6","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js":"7","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js":"8","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js":"9","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js":"10","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js":"11"},{"size":362,"mtime":1606939464318,"results":"12","hashOfConfig":"13"},{"size":946,"mtime":1607719325508,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1606939464318,"results":"15","hashOfConfig":"13"},{"size":1480,"mtime":1607740080754,"results":"16","hashOfConfig":"13"},{"size":3038,"mtime":1607745356165,"results":"17","hashOfConfig":"13"},{"size":2625,"mtime":1607745515523,"results":"18","hashOfConfig":"13"},{"size":7885,"mtime":1607808792282,"results":"19","hashOfConfig":"13"},{"size":16820,"mtime":1607804560203,"results":"20","hashOfConfig":"13"},{"size":4493,"mtime":1607741936720,"results":"21","hashOfConfig":"13"},{"size":3048,"mtime":1607739726273,"results":"22","hashOfConfig":"13"},{"size":11837,"mtime":1607806606379,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"h2owr1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js",[],["49","50"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js",["51","52"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Navigation from \"../components/navigation.js\";\r\n\r\nfunction Home() {\r\n  let textInput = React.createRef();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    const newSearch = textInput.current.value;\r\n\r\n    history.push({\r\n      pathname: \"/housing\",\r\n      state: { textInput: newSearch },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <section id=\"section1\" role=\"main\">\r\n        <h1 className=\"discover\">Rediscover Home</h1>\r\n        <div className=\"subtitle\">Find your perfect San Francisco housing.</div>\r\n        <div className=\"search-container\">\r\n          <div className=\"search\">\r\n            <input\r\n              aria-label=\"searchBox\"\r\n              type=\"text\"\r\n              className=\"searchTerm\"\r\n              ref={textInput}\r\n              placeholder=\"Search by neighborhood...\"\r\n            />\r\n\r\n            <button\r\n              aria-label=\"searchButton\"\r\n              type=\"submit\"\r\n              className=\"searchButton\"\r\n              onClick={handleClick}\r\n            >\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <footer>Image by @bradencollum on Unsplash.</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js",["53"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js",["54"],"import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./housing.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { ButtonGroup, DropdownButton } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navigation from \"../components/navigation.js\";\r\n\r\nfunction Housing(props) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(12);\r\n  const [hovered, setHovered] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [origPosts, setOrigPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [p, setP] = useState([null, [null]]);\r\n  const [imgHovered, setImgHovered] = useState([]);\r\n  const [imgString, setImgString] = useState([]);\r\n  const [heartSaved, setHeartSaved] = useState([]);\r\n  const [indexPost, setIndex] = useState(0);\r\n  const location = useLocation();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUser] = useState(\"\");\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const user = urlParams.get(\"username\");\r\n  if (user !== null && user !== undefined && user !== \"\") {\r\n    localStorage.setItem(\"username\", user);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"username\");\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getLoggedIn = async () => {\r\n      try {\r\n        const _loggedin = await fetch(\"/getlog\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        }).then((res) => res.json());\r\n        setLoggedIn(_loggedin);\r\n        console.log(\"logged in: \", _loggedin);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    getLoggedIn();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const saveHeartsinDB = async () => {\r\n      try {\r\n        const _loggedin = await fetch(\"/getlog\", {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        }).then((res) => res.json());\r\n        setLoggedIn(_loggedin);\r\n        console.log(\"logged in: \", _loggedin);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    saveHeartsinDB();\r\n  }, [heartSaved]);\r\n\r\n  useEffect(() => {\r\n    const dbSavedHearts = async () => {\r\n      const saved = await fetch(\"/getsavedhearts\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      });\r\n      const arr = [];\r\n      for (let i = 0; i < 3010; i++) {\r\n        arr.push(false);\r\n      }\r\n      const newArr = saved ? saved.heartsarr : arr;\r\n      setHeartSaved(newArr);\r\n    };\r\n    dbSavedHearts();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const fillImgString = () => {\r\n      try {\r\n        const arr = [];\r\n        for (let i = 0; i < 3010; i++) {\r\n          arr.push(\"./images/heart.png\");\r\n        }\r\n        setImgHovered(arr);\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    };\r\n    fillImgString();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fillImgHovered = () => {\r\n      try {\r\n        const arr = [];\r\n        for (let i = 0; i < 3010; i++) {\r\n          arr.push(false);\r\n        }\r\n        setImgHovered(arr);\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    };\r\n    fillImgHovered();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    const newSearch = textInput.current.value;\r\n    setLoading(true);\r\n    setPosts(\r\n      origPosts.filter(\r\n        (p) => p[\"result-hood\"] && p[\"result-hood\"].includes(newSearch)\r\n      )\r\n    );\r\n    setLoading(false);\r\n  };\r\n  let textInput = React.createRef();\r\n  let textInputProps =\r\n    location.state === undefined ? \"\" : location.state.textInput;\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      try {\r\n        if (textInputProps !== null && textInputProps !== \"\") {\r\n          setLoading(true);\r\n          const _posts = await fetch(\"/getposts\").then((res) => res.json());\r\n          setOrigPosts(_posts);\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(true);\r\n          const _posts = await fetch(\"/getposts\").then((res) => res.json());\r\n          setPosts(_posts);\r\n          setOrigPosts(_posts);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    getPosts();\r\n  }, [textInputProps]);\r\n\r\n  useEffect(() => {\r\n    const getImgString = async () => {\r\n      let copyArr = [...heartSaved];\r\n      let value;\r\n      if (heartSaved[indexPost] && imgHovered[indexPost]) {\r\n        value = \"./images/heart-fill.png\";\r\n      } else if (!heartSaved[indexPost] && imgHovered[indexPost]) {\r\n        value = \"./images/heart-hover.png\";\r\n      } else if (heartSaved[indexPost] && !imgHovered[indexPost]) {\r\n        value = \"./images/heart-fill.png\";\r\n      } else if (!heartSaved[indexPost] && !imgHovered[indexPost]) {\r\n        value = \"./images/heart.png\";\r\n      }\r\n      copyArr[indexPost] = value;\r\n      setImgString(copyArr);\r\n    };\r\n    getImgString();\r\n  }, [heartSaved, imgHovered, indexPost]);\r\n\r\n  useEffect(() => {\r\n    setPosts(\r\n      origPosts.filter(\r\n        (p) => p[\"result-hood\"] && p[\"result-hood\"].includes(textInputProps)\r\n      )\r\n    );\r\n  }, [textInputProps, origPosts]);\r\n\r\n  useEffect(() => {\r\n    const getHovered = () => {\r\n      try {\r\n        const arr = [];\r\n        for (let i = 0; i < 3010; i++) {\r\n          arr.push(false);\r\n        }\r\n        setHovered(arr);\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    };\r\n    getHovered();\r\n  }, []);\r\n\r\n  const changeHovered = (index, value) => {\r\n    let copyArr = [...hovered];\r\n    copyArr[index] = value;\r\n    setHovered(copyArr);\r\n  };\r\n\r\n  const getHov = (index) => {\r\n    return hovered[index];\r\n  };\r\n\r\n  const getModal = () => {\r\n    return showModal;\r\n  };\r\n\r\n  const indexLastPost = currentPage * postsPerPage;\r\n  const indexFirstPost = indexLastPost - postsPerPage;\r\n  const currPosts = posts.slice(indexFirstPost, indexLastPost);\r\n\r\n  const clickedInfo = (p, index) => {\r\n    setIndex(index);\r\n    console.log(index);\r\n    setP(Object.values(p));\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const renderImg = () => {\r\n    const items = [];\r\n    for (let i = 0; i < p[1].length; i++) {\r\n      items.push(\r\n        <div className=\"indiv-img col-xs-6\">\r\n          <img\r\n            src={\r\n              p[1]\r\n                ? `${`${p[1][i]}`.replace(\"50x50c\", \"600x450\")}`\r\n                : \"./images/notf.png\"\r\n            }\r\n            onError={(event) =>\r\n              event.target.setAttribute(\"src\", \"./images/notf.png\")\r\n            }\r\n            alt=\"housing\"\r\n            className=\"housing-img-2\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <div className=\"container-fluid\" id=\"cont\">\r\n          <div className=\"row\">{items}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const changeSavedHeart = (index, value) => {\r\n    let copyArr = [...heartSaved];\r\n    copyArr[index] = value;\r\n    setHeartSaved(copyArr);\r\n  };\r\n\r\n  const changeImgHovered = (value) => {\r\n    let copyArr = [...imgHovered];\r\n    copyArr[indexPost] = value;\r\n    setImgHovered(copyArr);\r\n  };\r\n  const savePost = async (\r\n    title,\r\n    price,\r\n    housinginfo,\r\n    hood,\r\n    date,\r\n    body,\r\n    address,\r\n    images\r\n  ) => {\r\n    let val = heartSaved[indexPost];\r\n    changeSavedHeart(indexPost, !val);\r\n    if (!heartSaved[indexPost]) {\r\n      try {\r\n        console.log(\"Add\", username);\r\n        await fetch(\"/savehousing\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            title: title,\r\n            price: price,\r\n            housinginfo: housinginfo,\r\n            hood: hood,\r\n            date: date,\r\n            body: body,\r\n            address: address,\r\n            images: images,\r\n          }),\r\n        });\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    } else {\r\n      console.log(\"Delete\");\r\n      try {\r\n        await fetch(\"/deletehousing\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            title: title,\r\n          }),\r\n        });\r\n      } catch (err) {\r\n        console.log(\"error\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderPosts = (posts, loading) => {\r\n    if (loading) {\r\n      return <h2>Loading...</h2>;\r\n    } else if (posts.length === 0) {\r\n      return <h2>No housing met your criteria.</h2>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Modal isOpen={showModal}>\r\n          <div className=\"modal-header\">\r\n            <div className=\"buttons-post\">\r\n              {loggedIn && (\r\n                <button\r\n                  onMouseLeave={() => changeImgHovered(false)}\r\n                  onMouseOver={() => changeImgHovered(true)}\r\n                  onClick={() =>\r\n                    savePost(\r\n                      `${p[3]}`,\r\n                      `${p[4]}`,\r\n                      `${p[5]}`,\r\n                      `${p[6]}`,\r\n                      `${p[8]}`,\r\n                      `${p[9]}`,\r\n                      `${p[13]}`,\r\n                      `${p[1]}`\r\n                    )\r\n                  }\r\n                  className=\"heart\"\r\n                  tab-index=\"0\"\r\n                >\r\n                  <img\r\n                    src={imgString[indexPost]}\r\n                    alt=\"heart button to save a post\"\r\n                  />\r\n                </button>\r\n              )}\r\n              <button onClick={closeModal} className=\"close-btn\" tab-index=\"0\">\r\n                X\r\n              </button>\r\n            </div>\r\n            <h2 className=\"modal-header-2\">{p[3]}</h2>\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n            <div className=\"modal-img\"></div>\r\n            <div>\r\n              <b>Price:</b> {p[4]}\r\n            </div>\r\n            <div>\r\n              <b>Neighborhood:</b> {p[6]}\r\n            </div>\r\n            <div>\r\n              <b>Map Address:</b> {p[13]}\r\n            </div>\r\n            <div>\r\n              <b>Date Posted:</b> {p[8]}\r\n            </div>\r\n            <div>\r\n              <b>Housing Information:</b> {p[5]}\r\n            </div>\r\n            <div>\r\n              <b>About:</b>\r\n              {`${p[9]}`\r\n                .replaceAll(\"&amp;\", \"and\")\r\n                .replace(/<[^>]*>?/gm, \"\")\r\n                .replace(\"QR Code Link to This Post\", \"\")}\r\n            </div>{\" \"}\r\n          </div>\r\n\r\n          <div className=\"modal-img\">{renderImg()}</div>\r\n        </Modal>\r\n\r\n        <Container>\r\n          <Row>\r\n            {posts.map((p, index) => (\r\n              <Col md=\"4\">\r\n                <div className=\"container-card\">\r\n                  {\" \"}\r\n                  <b>\r\n                    <div className=\"card-header-1\">{p[\"result-title\"]}</div>\r\n                  </b>\r\n                  {getHov(index) && (\r\n                    <div\r\n                      className=\"moreinfo\"\r\n                      onMouseLeave={() => changeHovered(index, false)}\r\n                      onMouseOver={() => changeHovered(index, true)}\r\n                      tabIndex=\"0\"\r\n                    >\r\n                      <Button\r\n                        className=\"click\"\r\n                        onClick={() => clickedInfo(p, index)}\r\n                      >\r\n                        Click for more info!{\" \"}\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                  {!getHov(index) && (\r\n                    <div className=\"whole-card\">\r\n                      <div\r\n                        className=\"card-body-1\"\r\n                        onMouseLeave={() => changeHovered(index, false)}\r\n                        onMouseOver={() => changeHovered(index, true)}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            p.images[0]\r\n                              ? `${p.images[0].replace(\"50x50c\", \"600x450\")}`\r\n                              : \"./images/notf.png\"\r\n                          }\r\n                          onError={(event) =>\r\n                            event.target.setAttribute(\r\n                              \"src\",\r\n                              \"./images/notf.png\"\r\n                            )\r\n                          }\r\n                          alt=\"housing\"\r\n                          className=\"housing-img\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const paginate = (pageNumber, totalPosts) => {\r\n    if (pageNumber === \"<<\") {\r\n      setCurrentPage(1);\r\n    } else if (pageNumber === \">>\") {\r\n      setCurrentPage(Math.ceil(totalPosts / 12));\r\n    } else {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const Pagination = (postsPerPage, totalPosts, paginate, currentPage) => {\r\n    const pageNumbers = [];\r\n\r\n    const pages = Math.ceil(totalPosts / 12);\r\n    if (currentPage <= 5) {\r\n      currentPage = 5;\r\n    }\r\n\r\n    if (currentPage >= pages - 5) {\r\n      currentPage = pages - 5;\r\n    }\r\n    pageNumbers.push(\"<<\");\r\n\r\n    for (\r\n      let i = Math.max(1, currentPage - 5);\r\n      i <= Math.min(currentPage + 5, totalPosts);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n    pageNumbers.push(\">>\");\r\n\r\n    return (\r\n      <nav className=\"pag\">\r\n        <ol className=\"pagination\">\r\n          {pageNumbers.map((i) => (\r\n            <li key={i} className=\"page-item\">\r\n              <Button\r\n                onClick={() => paginate(i, totalPosts)}\r\n                className=\"page-link\"\r\n              >\r\n                {i}\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const filterLoToHi = () => {\r\n    const sorted = [...posts].sort(\r\n      (a, b) =>\r\n        a[\"result-price\"].replace(\"$\", \"\").replace(\",\", \"\") -\r\n        b[\"result-price\"].replace(\"$\", \"\").replace(\",\", \"\")\r\n    );\r\n\r\n    setPosts(sorted);\r\n  };\r\n\r\n  const filterHiToLo = () => {\r\n    const sorted = [...posts].sort(\r\n      (a, b) =>\r\n        b[\"result-price\"].replace(\"$\", \"\").replace(\",\", \"\") -\r\n        a[\"result-price\"].replace(\"$\", \"\").replace(\",\", \"\")\r\n    );\r\n\r\n    setPosts(sorted);\r\n  };\r\n\r\n  const filterOrig = () => {\r\n    setPosts(origPosts);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n\r\n      <div className=\"house-full\" role=\"main\">\r\n        <h1 className=\"pg-heading\">All Housing </h1>\r\n        <div className=\"inner\">\r\n          <div className=\"filters\">\r\n            <div className=\"search\" id=\"search-2\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"searchTerm\"\r\n                ref={textInput}\r\n                placeholder=\"Search by neighborhood...\"\r\n                aria-label=\"searchBox\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"searchButton\"\r\n                onClick={handleClick}\r\n              >\r\n                <i\r\n                  className=\"fa fa-search\"\r\n                  aria-hidden=\"true\"\r\n                  aria-label=\"searchButton\"\r\n                ></i>\r\n              </button>\r\n              <ButtonGroup className=\"dropdown\">\r\n                <DropdownButton title=\"Sort By:\" id=\"dropdown-btn\">\r\n                  <Button key=\"1\" className=\"filter-btn\" onClick={filterLoToHi}>\r\n                    Price (low to high)\r\n                  </Button>\r\n                  <Button key=\"2\" className=\"filter-btn\" onClick={filterHiToLo}>\r\n                    Price (high to low){\" \"}\r\n                  </Button>\r\n                  <Button key=\"3\" className=\"filter-btn\" onClick={filterOrig}>\r\n                    Default\r\n                  </Button>\r\n                </DropdownButton>\r\n              </ButtonGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"rendered\">{renderPosts(currPosts, loading)} </div>\r\n          {Pagination(postsPerPage, posts.length, paginate, currentPage)}\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"other-footer\"></footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Housing;\r\n","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":199,"column":41,"nodeType":"68","messageId":"69","endLine":199,"endColumn":43},{"ruleId":"61","severity":1,"message":"70","line":211,"column":9,"nodeType":"63","messageId":"64","endLine":211,"endColumn":17},{"ruleId":"61","severity":1,"message":"71","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":19},{"ruleId":"61","severity":1,"message":"70","line":19,"column":9,"nodeType":"63","messageId":"64","endLine":19,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getModal' is assigned a value but never used.","'indexPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]