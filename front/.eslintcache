[{"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js":"1","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js":"2","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js":"3","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js":"4","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js":"5","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js":"6","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js":"7","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js":"8","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js":"9","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js":"10","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js":"11"},{"size":362,"mtime":1606939464318,"results":"12","hashOfConfig":"13"},{"size":946,"mtime":1607719325508,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1606939464318,"results":"15","hashOfConfig":"13"},{"size":1480,"mtime":1607740080754,"results":"16","hashOfConfig":"13"},{"size":3038,"mtime":1607745356165,"results":"17","hashOfConfig":"13"},{"size":2625,"mtime":1607745515523,"results":"18","hashOfConfig":"13"},{"size":5930,"mtime":1607748115846,"results":"19","hashOfConfig":"13"},{"size":16820,"mtime":1607804560203,"results":"20","hashOfConfig":"13"},{"size":4493,"mtime":1607741936720,"results":"21","hashOfConfig":"13"},{"size":3048,"mtime":1607739726273,"results":"22","hashOfConfig":"13"},{"size":11811,"mtime":1607805163665,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"h2owr1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\reportWebVitals.js",[],["49","50"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\App.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\index.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Home\\home.js",["51","52"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Navigation from \"../components/navigation.js\";\r\n\r\nfunction Home() {\r\n  let textInput = React.createRef();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    const newSearch = textInput.current.value;\r\n\r\n    history.push({\r\n      pathname: \"/housing\",\r\n      state: { textInput: newSearch },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <section id=\"section1\" role=\"main\">\r\n        <h1 className=\"discover\">Rediscover Home</h1>\r\n        <div className=\"subtitle\">Find your perfect San Francisco housing.</div>\r\n        <div className=\"search-container\">\r\n          <div className=\"search\">\r\n            <input\r\n              aria-label=\"searchBox\"\r\n              type=\"text\"\r\n              className=\"searchTerm\"\r\n              ref={textInput}\r\n              placeholder=\"Search by neighborhood...\"\r\n            />\r\n\r\n            <button\r\n              aria-label=\"searchButton\"\r\n              type=\"submit\"\r\n              className=\"searchButton\"\r\n              onClick={handleClick}\r\n            >\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <footer>Image by @bradencollum on Unsplash.</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignUp\\signup.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\SignIn\\signin.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Appts\\appts.js",["53"],"import React from \"react\";\r\nimport \"./appts.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport Navigation from \"../components/navigation.js\";\r\n\r\nfunction Appts() {\r\n  const [events, setEvents] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"username\");\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getEventData = async () => {\r\n      try {\r\n        const _events = await fetch(\"/getevents\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username: user,\r\n          }),\r\n        }).then((res) => res.json());\r\n\r\n        let events2 = _events;\r\n\r\n        setEvents(events2);\r\n        console.log(\"front\", events2);\r\n      } catch (err) {\r\n        console.log(\"error \", err);\r\n      }\r\n    };\r\n    getEventData();\r\n  }, [user]);\r\n\r\n  const getEvents = () => {\r\n    let rtn =\r\n      events !== null\r\n        ? events.eventsarr\r\n        : { title: \"demo\", start: \"2020-12-08 05:00\", end: \"2020-12-08 05:30\" };\r\n    return rtn;\r\n  };\r\n\r\n  return (\r\n    <div className=\"cal-cont\">\r\n      <Navigation></Navigation>\r\n      <h1 className=\"pg-heading\" id=\"appt-heading\">\r\n        Appointments\r\n      </h1>\r\n      <form action=\"/senddata2\" method=\"POST\" className=\"form-events\">\r\n        <div className=\"form-group-appt\">\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"appt-username\"\r\n            name=\"username\"\r\n            className=\"form-control\"\r\n            placeholder=\"Your username\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group-appt\">\r\n          <label htmlFor=\"title\">Event Title: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            className=\"form-control\"\r\n            placeholder=\"Name your event\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group-appt\">\r\n          <label htmlFor=\"startdate\">Start Date and Time: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"startdate\"\r\n            name=\"startdate\"\r\n            className=\"form-control\"\r\n            placeholder=\"Use the format YYYY-MM-DD HH:MM\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group-appt\">\r\n          <label htmlFor=\"enddate\">End Date and Time: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"enddate\"\r\n            name=\"enddate\"\r\n            className=\"form-control\"\r\n            placeholder=\"Use the format YYYY-MM-DD HH:MM\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group-appt-2\">\r\n          <input type=\"submit\" value=\"Add Event\" className=\"add-event-btn\" />\r\n        </div>\r\n      </form>\r\n      <div className=\"cal\" tabindex=\"0\" role=\"main\">\r\n        <FullCalendar\r\n          plugins={[interactionPlugin, dayGridPlugin, timeGridPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          defaultDate={new Date()}\r\n          selectable={true}\r\n          displayEventTime={true}\r\n          events={getEvents()}\r\n          eventColor=\"#42692d\"\r\n          eventClick={async (clickInfo) => {\r\n            let bool = window.confirm(\r\n              \"Are you sure you want to delete this event?\"\r\n            );\r\n            if (bool) {\r\n              await fetch(\"/deletedata\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                  username: user,\r\n                  title: clickInfo.event.title,\r\n                  start: clickInfo.event.startStr,\r\n                  end: clickInfo.event.endStr,\r\n                  allDay: clickInfo.event.allDay,\r\n                }),\r\n              });\r\n              clickInfo.event.remove();\r\n            }\r\n          }}\r\n          select={async (selectInfo) => {\r\n            let title = prompt(\"Please enter a new title for your event\");\r\n\r\n            let calendar = selectInfo.view.calendar;\r\n\r\n            if (title !== null && title != \"\") {\r\n              calendar.addEvent({\r\n                title: title,\r\n                start: selectInfo.startStr,\r\n                end: selectInfo.endStr,\r\n                allDay: selectInfo.allDay,\r\n              });\r\n              try {\r\n                await fetch(\"/senddata\", {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({\r\n                    username: user,\r\n                    title: title,\r\n                    start: selectInfo.startStr,\r\n                    end: selectInfo.endStr,\r\n                    allDay: selectInfo.allDay,\r\n                  }),\r\n                });\r\n                console.log(\"done\");\r\n              } catch (err) {\r\n                console.log(\"error\");\r\n              }\r\n            }\r\n          }}\r\n          defaultView=\"timeGridWeek\"\r\n          header={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\r\n          }}\r\n          eventTimeFormat={{\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            meridiem: false,\r\n          }}\r\n          tabindex=\"0\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appts;\r\n","C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Housing\\housing.js",["54"],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Account\\account.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\components\\navigation.js",[],"C:\\Users\\krist\\Documents\\FinalProject\\front\\src\\Saved\\saved.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":142,"column":41,"nodeType":"68","messageId":"69","endLine":142,"endColumn":43},{"ruleId":"61","severity":1,"message":"70","line":211,"column":9,"nodeType":"63","messageId":"64","endLine":211,"endColumn":17},{"ruleId":"61","severity":1,"message":"71","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":19},{"ruleId":"61","severity":1,"message":"70","line":19,"column":9,"nodeType":"63","messageId":"64","endLine":19,"endColumn":17},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getModal' is assigned a value but never used.","'indexPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]